'use strict';

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _micro = require('micro');

var _micro2 = _interopRequireDefault(_micro);

var _uuidBase = require('uuid-base62');

var _uuidBase2 = _interopRequireDefault(_uuidBase);

var _testLiten = require('test-liten');

var _testLiten2 = _interopRequireDefault(_testLiten);

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

(0, _ava2.default)('GET /:id', (() => {
  var _ref = _asyncToGenerator(function* (t) {
    let id = _uuidBase2.default.v4();

    let srv = (0, _micro2.default)((() => {
      var _ref2 = _asyncToGenerator(function* (req, res) {
        (0, _micro.send)(res, 200, { id });
      });

      return function (_x2, _x3) {
        return _ref2.apply(this, arguments);
      };
    })());

    let url = yield (0, _testLiten2.default)(srv);
    let body = yield (0, _requestPromise2.default)({ uri: url, json: true });

    t.deepEqual(body, { id });
  });

  return function (_x) {
    return _ref.apply(this, arguments);
  };
})());
//# sourceMappingURL=..\node_modules\.cache\ava\88d7c1e509172ea6b9f9a90d3a144a42.js.map